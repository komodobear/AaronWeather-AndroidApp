name: Stabilny CI/CD z Emulatorem Androida
on: [ push, pull_request ]

jobs:
  connected_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'
          cache: 'gradle'

      # KROK KRYTYCZNY: Konfiguracja uprawnień KVM dla akceleracji
      - name: Enable KVM group perms (REQUIRED for fast Linux Emulation)
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run Android Instrumented Tests on Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          emulator-boot-timeout: 900
          disable-animations: true
          emulator-options: -no-window -no-boot-anim -no-snapshot-save -gpu swiftshader_indirect

          # SKRYPT TESTOWY: Robustne oczekiwanie na pełny boot i uruchomienie testów
          script: |
            echo "1. Waiting for device connection (ADB)..."
            adb wait-for-device
            
            echo "2. Verifying Android OS boot completion..."
            
            # Weryfikacja, czy system operacyjny jest w pełni uruchomiony (sys.boot_completed=1)
            # Użycie 'tr -d '\r'' do usunięcia znaków powrotu karetki, które mogą występować w logach ADB
            boot_status=$(adb shell getprop sys.boot_completed | tr -d '\r')
            TIMEOUT_SECONDS=300
            ELAPSED_TIME=0

            while [ "$boot_status"!= "1" ] &&; do
              echo "Waiting for full boot. Current status: $boot_status. Elapsed: $ELAPSED_TIME seconds."
              sleep 10
              ELAPSED_TIME=$((ELAPSED_TIME + 10))
              boot_status=$(adb shell getprop sys.boot_completed | tr -d '\r')
            done
            
            if [ "$boot_status"!= "1" ]; then
              echo "ERROR: Failed to boot Android OS within secondary timeout ($TIMEOUT_SECONDS seconds)."
              exit 1
            fi

            echo "Device fully booted and ready. Running tests..."
            adb shell input keyevent 82 # Odblokowanie ekranu dla testów UI
            
            # Uruchomienie testów z opcją kontynuacji w przypadku awarii jednego modułu
            ./gradlew connectedAndroidTest --continue

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-report
          path: '**/build/reports/androidTests/connected/'